### Port conventions (though there are many, many exceptions)
# 81xx - grapl services (and some `wait-for-it` http servers)
# 82xx - TBD
# 83xx - grapl plugin services, like grapl-aws-plugins
# 84xx - debugger ports (see vsc_debugger.py)

version: "3.8"
volumes:
  dgraph_export:

services:

  #
  # Infrastructure dependencies
  #

  grapl-master-graph-db:
    tty: false
    image: dgraph/standalone:v20.07.1
    ports:
      - "5080:5080"  # zero - used for `dgraph live` importing-data command in `integration_tests.rst`
      - "8000:8000"  # ratel
      - "8080:8080"  # alpha http
      - "9080:9080"  # alpha grpc
    logging:
      driver: none
    volumes:
      - type: volume
        source: dgraph_export
        # Hitting :8080/admin/export will force an export to be written to this directory.
        target: /dgraph/export

  # dev uses 1 big redis instance, prod has 1:1 redis per grapl service
  dev-shared-redis:  # maybe transitory, this will eventually match prod
    image: redis:latest
    command: |
      sh -c "
        # hack from https://stackoverflow.com/questions/54533308/disable-redis-persistence-in-docker
        # to disable persistence
        rm -f /data/dump.rdb && redis-server
      "
    ports:
      - "6379:6379" # redis default
    logging:
      driver: none

  sqs:
    image: localstack/localstack:0.11.5
    environment:
      - SERVICES=sqs:9324
      - HOSTNAME_EXTERNAL=sqs.us-east-1.amazonaws.com
      - IMAGE_NAME=localstack/localstack:0.11.5
    ports:
      - "9324:9324"
    networks:
      default:
        aliases:
          - sqs.us-east-1.amazonaws.com
    logging:
      driver: none

  secretsmanager:
    image: localstack/localstack:0.11.5
    environment:
      - PORT_WEB_UI=8099
      - SERVICES=secretsmanager:4584
      - HOSTNAME_EXTERNAL=secretsmanager.us-east-1.amazonaws.com
      - IMAGE_NAME=localstack/localstack:0.11.5

    ports:
      - "4584:4584"
      - "8099:8099"

  s3:
    image: minio/minio
    command: server /data
    ports:
      - "9000:9000"
    networks:
      default:
        aliases:
          - minio
    logging:
      driver: none

  dynamodb:
    image: amazon/dynamodb-local
    logging:
      driver: none

  nginx:
    image: nginxinc/nginx-unprivileged
    command: nginx
    volumes:
      - ./etc/local_grapl/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "3128:3128"
    depends_on:
      - s3
      - sqs
      - grapl-provision
  #
  # Rust services
  #
  grapl-rust-metric-forwarder:
    image: grapl/grapl-metric-forwarder:${TAG:-latest}
    build:
      context: src/rust
      dockerfile: Dockerfile.Makefile
      target: metric-forwarder-deploy
      args:
        - SCCACHE_LOCATION=${SCCACHE_LOCATION:-container}
        - SCCACHE_BUCKET=${SCCACHE_BUCKET}
        - PROFILE=${PROFILE:-debug}
    tty: false
    environment:
      - "IS_LOCAL=True"
      - GRAPL_LOG_LEVEL=${GRAPL_LOG_LEVEL:-ERROR}
      - RUST_LOG=${RUST_LOG:-ERROR}
      - "AWS_REGION=us-east-1"
    extra_hosts:
      - amazonaws:127.0.0.1

  grapl-rust-sysmon-subgraph-generator:
    image: grapl/grapl-sysmon-subgraph-generator:${TAG:-latest}
    build:
      context: src/rust
      dockerfile: Dockerfile.Makefile
      target: sysmon-subgraph-generator-deploy
      args:
        - SCCACHE_LOCATION=${SCCACHE_LOCATION:-container}
        - SCCACHE_BUCKET=${SCCACHE_BUCKET}
        - PROFILE=${PROFILE:-debug}
    tty: false
    environment:
      - RUST_LOG=${RUST_LOG:-ERROR}
      - "EVENT_CACHE_CLUSTER_ADDRESS=dev-shared-redis:6379"
      - "IS_LOCAL=True"
      - "SOURCE_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/000000000000/grapl-sysmon-graph-generator-queue"
      - "RETRY_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/000000000000/grapl-sysmon-graph-generator-retry-queue"
      - "DEAD_LETTER_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-sysmon-graph-generator-dead-letter-queue"
      - "DEST_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-node-identifier-queue"
      - "DEST_BUCKET_NAME=local-grapl-unid-subgraphs-generated-bucket"
      - "SQS_ENDPOINT=http://sqs.us-east-1.amazonaws.com:9324"
      - "SQS_ACCESS_KEY_ID=dummy_cred_aws_access_key_id"
      - "SQS_ACCESS_KEY_SECRET=dummy_cred_aws_secret_access_key"
      - "S3_ENDPOINT=http://s3:9000"
      - "S3_ACCESS_KEY_ID=minioadmin"
      - "S3_ACCESS_KEY_SECRET=minioadmin"
    links:
      - s3:minio
      - sqs:sqs.us-east-1.amazonaws.com
    extra_hosts:
      - sqs:127.0.0.1
      - amazonaws:127.0.0.1
      - minio:127.0.0.1
    depends_on:
      - s3
      - sqs
      - grapl-provision

  grapl-rust-osquery-subgraph-generator:
    image: grapl/grapl-osquery-subgraph-generator:${TAG:-latest}
    build:
      context: src/rust
      dockerfile: Dockerfile.Makefile
      target: osquery-subgraph-generator-deploy
      args:
        - SCCACHE_LOCATION=${SCCACHE_LOCATION:-container}
        - SCCACHE_BUCKET=${SCCACHE_BUCKET}
        - PROFILE=${PROFILE:-debug}
    tty: false
    environment:
      - "AWS_REGION=us-east-1"
      - "BUCKET_PREFIX=local-grapl"
      - "DEAD_LETTER_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-osquery-subgraph-generator-dead-letter-queue"
      - "DEST_BUCKET_NAME=local-grapl-unid-subgraphs-generated-bucket"
      - "DEST_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-node-identifier-queue"
      - "IS_LOCAL=True"
      - "RETRY_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/000000000000/grapl-osquery-subgraph-generator-retry-queue"
      - "S3_ACCESS_KEY_ID=minioadmin"
      - "S3_ACCESS_KEY_SECRET=minioadmin"
      - "S3_ENDPOINT=http://s3:9000"
      - "SOURCE_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/000000000000/grapl-osquery-subgraph-generator-queue"
      - "SQS_ACCESS_KEY_ID=dummy_cred_aws_access_key_id"
      - "SQS_ACCESS_KEY_SECRET=dummy_cred_aws_secret_access_key"
      - "SQS_ENDPOINT=http://sqs.us-east-1.amazonaws.com:9324"
      - GRAPL_LOG_LEVEL=${GRAPL_LOG_LEVEL:-ERROR}
      - RUST_LOG=${RUST_LOG:-ERROR}
    links:
      - s3:minio
      - sqs:sqs.us-east-1.amazonaws.com
    extra_hosts:
      - sqs:127.0.0.1
      - amazonaws:127.0.0.1
      - minio:127.0.0.1
    depends_on:
      - s3
      - sqs
      - grapl-provision

  grapl-rust-node-identifier:
    image: grapl/grapl-node-identifier:${TAG:-latest}
    build:
      context: src/rust
      dockerfile: Dockerfile.Makefile
      target: node-identifier-deploy
      args:
        - SCCACHE_LOCATION=${SCCACHE_LOCATION:-container}
        - SCCACHE_BUCKET=${SCCACHE_BUCKET}
        - PROFILE=${PROFILE:-debug}
    environment:
      - "IS_LOCAL=True"
      - RUST_LOG=${RUST_LOG:-ERROR}
      - "EVENT_CACHE_CLUSTER_ADDRESS=dev-shared-redis:6379"
      - "SOURCE_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-node-identifier-queue"
      - "RETRY_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-node-identifier-retry-queue"
      - "DEAD_LETTER_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-node-identifier-dead-letter-queue"
      - "DEST_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-graph-merger-queue"
      - "DEST_BUCKET_NAME=local-grapl-subgraphs-generated-bucket"
      - "SQS_ENDPOINT=http://sqs.us-east-1.amazonaws.com:9324"
      - "SQS_ACCESS_KEY_ID=dummy_cred_aws_access_key_id"
      - "SQS_ACCESS_KEY_SECRET=dummy_cred_aws_secret_access_key"
      - "S3_ENDPOINT=http://s3:9000"
      - "S3_ACCESS_KEY_ID=minioadmin"
      - "S3_ACCESS_KEY_SECRET=minioadmin"
      - "DYNAMODB_ENDPOINT=http://dynamodb:8000"
      - "DYNAMODB_ACCESS_KEY_ID=dummy_cred_aws_access_key_id"
      - "DYNAMODB_ACCESS_KEY_SECRET=dummy_cred_aws_secret_access_key"
      - STATIC_MAPPING_TABLE=local-grapl-static_mapping_table
      - DYNAMIC_SESSION_TABLE=local-grapl-dynamic_session_table
      - PROCESS_HISTORY_TABLE=local-grapl-process_history_table
      - FILE_HISTORY_TABLE=local-grapl-file_history_table
      - INBOUND_CONNECTION_HISTORY_TABLE=local-grapl-inbound_connection_history_table
      - OUTBOUND_CONNECTION_HISTORY_TABLE=local-grapl-outbound_connection_history_table
      - NETWORK_CONNECTION_HISTORY_TABLE=local-grapl-network_connection_history_table
      - IP_CONNECTION_HISTORY_TABLE=local-grapl-ip_connection_history_table
      - ASSET_ID_MAPPINGS=local-grapl-asset_id_mappings
    tty: false
    links:
      - s3:minio
      - dynamodb:dynamodb
      - sqs:sqs.us-east-1.amazonaws.com
    extra_hosts:
      - sqs:127.0.0.1
      - amazonaws:127.0.0.1
      - minio:127.0.0.1
    depends_on:
      - s3
      - dynamodb
      - sqs
      - grapl-provision

  grapl-rust-node-identifier-retry-handler:
    image: grapl/grapl-node-identifier-retry-handler:${TAG:-latest}
    build:
      context: src/rust
      dockerfile: Dockerfile.Makefile
      target: node-identifier-retry-handler-deploy
      args:
        - SCCACHE_LOCATION=${SCCACHE_LOCATION:-container}
        - SCCACHE_BUCKET=${SCCACHE_BUCKET}
        - PROFILE=${PROFILE:-debug}
    environment:
      - RUST_LOG=${RUST_LOG:-ERROR}
      - "IS_LOCAL=True"
      - "EVENT_CACHE_CLUSTER_ADDRESS=dev-shared-redis:6379"
      - "SOURCE_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-node-identifier-retry-queue"
      - "RETRY_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-node-identifier-dead-letter-queue"
      - "DEAD_LETTER_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-node-identifier-dead-letter-queue"
      - "DEST_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-graph-merger-queue"
      - "DEST_BUCKET_NAME=local-grapl-subgraphs-generated-bucket"
      - "SQS_ENDPOINT=http://sqs.us-east-1.amazonaws.com:9324"
      - "SQS_ACCESS_KEY_ID=dummy_cred_aws_access_key_id"
      - "SQS_ACCESS_KEY_SECRET=dummy_cred_aws_secret_access_key"
      - "S3_ENDPOINT=http://s3:9000"
      - "S3_ACCESS_KEY_ID=minioadmin"
      - "S3_ACCESS_KEY_SECRET=minioadmin"
      - "DYNAMODB_ENDPOINT=http://dynamodb:8000"
      - "DYNAMODB_ACCESS_KEY_ID=dummy_cred_aws_access_key_id"
      - "DYNAMODB_ACCESS_KEY_SECRET=dummy_cred_aws_secret_access_key"
      - STATIC_MAPPING_TABLE=local-grapl-static_mapping_table
      - DYNAMIC_SESSION_TABLE=local-grapl-dynamic_session_table
      - PROCESS_HISTORY_TABLE=local-grapl-process_history_table
      - FILE_HISTORY_TABLE=local-grapl-file_history_table
      - INBOUND_CONNECTION_HISTORY_TABLE=local-grapl-inbound_connection_history_table
      - OUTBOUND_CONNECTION_HISTORY_TABLE=local-grapl-outbound_connection_history_table
      - NETWORK_CONNECTION_HISTORY_TABLE=local-grapl-network_connection_history_table
      - IP_CONNECTION_HISTORY_TABLE=local-grapl-ip_connection_history_table
      - ASSET_ID_MAPPINGS=local-grapl-asset_id_mappings
    tty: false
    links:
      - s3:minio
      - dynamodb:dynamodb
      - sqs:sqs.us-east-1.amazonaws.com
    extra_hosts:
      - sqs:127.0.0.1
      - amazonaws:127.0.0.1
      - minio:127.0.0.1
    depends_on:
      - s3
      - dynamodb
      - sqs
      - grapl-provision

  grapl-rust-graph-merger:
    image: grapl/grapl-graph-merger:${TAG:-latest}
    build:
      context: src/rust
      dockerfile: Dockerfile.Makefile
      target: graph-merger-deploy
      args:
        - SCCACHE_LOCATION=${SCCACHE_LOCATION:-container}
        - SCCACHE_BUCKET=${SCCACHE_BUCKET}
        - PROFILE=${PROFILE:-debug}
    environment:
      - "IS_LOCAL=True"
      - RUST_LOG=${RUST_LOG:-ERROR}
      - "EVENT_CACHE_CLUSTER_ADDRESS=dev-shared-redis:6379"
      - "SOURCE_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-graph-merger-queue"
      - "RETRY_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-graph-merger-retry-queue"
      - "DEAD_LETTER_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-graph-merger-dead-letter-queue"
      - "DEST_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-analyzer-dispatcher-queue"
      - "DEST_BUCKET_NAME=local-grapl-subgraphs-merged-bucket"
      - "SQS_ENDPOINT=http://sqs.us-east-1.amazonaws.com:9324"
      - "SQS_ACCESS_KEY_ID=dummy_cred_aws_access_key_id"
      - "SQS_ACCESS_KEY_SECRET=dummy_cred_aws_secret_access_key"
      - "S3_ENDPOINT=http://s3:9000"
      - "S3_ACCESS_KEY_ID=minioadmin"
      - "S3_ACCESS_KEY_SECRET=minioadmin"
      - "DYNAMODB_ENDPOINT=http://dynamodb:8000"
      - "DYNAMODB_ACCESS_KEY_ID=dummy_cred_aws_access_key_id"
      - "DYNAMODB_ACCESS_KEY_SECRET=dummy_cred_aws_secret_access_key"
      - MG_ALPHAS=http://master_graph:9080
      - "GRAPL_SCHEMA_TABLE=local-grapl-grapl_schema_table"
    tty: false
    links:
      - s3:minio
      - sqs:sqs.us-east-1.amazonaws.com
      - grapl-master-graph-db:master_graph
    extra_hosts:
      - sqs:127.0.0.1
      - amazonaws:127.0.0.1
      - minio:127.0.0.1
    depends_on:
      - s3
      - sqs
      - grapl-provision
      - grapl-master-graph-db

  grapl-rust-analyzer-dispatcher:
    image: grapl/grapl-analyzer-dispatcher:${TAG:-latest}
    build:
      context: src/rust
      dockerfile: Dockerfile.Makefile
      target: analyzer-dispatcher-deploy
      args:
        - SCCACHE_LOCATION=${SCCACHE_LOCATION:-container}
        - SCCACHE_BUCKET=${SCCACHE_BUCKET}
        - PROFILE=${PROFILE:-debug}
    environment:
      - "ANALYZERS_BUCKET=local-grapl-analyzers-bucket"
      - "SOURCE_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-analyzer-dispatcher-queue"
      - "RETRY_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-analyzer-dispatcher-retry-queue"
      - "DEAD_LETTER_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-analyzer-dispatcher-dead-letter-queue"
      - "DEST_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-analyzer-executor-queue"
      - "DEST_BUCKET_NAME=local-grapl-analyzer-dispatched-bucket"
      - "ANALYZER_BUCKET=local-grapl-analyzers-bucket"
      - "SQS_ENDPOINT=http://sqs.us-east-1.amazonaws.com:9324"
      - "SQS_ACCESS_KEY_ID=dummy_cred_aws_access_key_id"
      - "SQS_ACCESS_KEY_SECRET=dummy_cred_aws_secret_access_key"
      - "S3_ENDPOINT=http://s3:9000"
      - "S3_ACCESS_KEY_ID=minioadmin"
      - "S3_ACCESS_KEY_SECRET=minioadmin"
      - "DYNAMODB_ENDPOINT=http://dynamodb:8000"
      - "DYNAMODB_ACCESS_KEY_ID=dummy_cred_aws_access_key_id"
      - "DYNAMODB_ACCESS_KEY_SECRET=dummy_cred_aws_secret_access_key"
      - RUST_LOG=${RUST_LOG:-ERROR}
      - "IS_LOCAL=True"
    tty: false
    links:
      - s3:minio
      - sqs:sqs.us-east-1.amazonaws.com
    extra_hosts:
      - sqs:127.0.0.1
      - amazonaws:127.0.0.1
      - minio:127.0.0.1
    depends_on:
      - s3
      - sqs


  #
  # Python services
  #

  # Removed per https://grapl-internal.slack.com/archives/C017PLQ8TCZ/p1601574470186700
  # Add it back once Analyzer Deployer is ready for prime time!
  # analyzer-deployer:
  #   image: grapl/analyzer-deployer:${TAG:-latest}
  #   command: /bin/sh -c '. venv/bin/activate && cd /home/grapl/app && chalice local --no-autoreload --host=0.0.0.0 --port=8125'
  #   environment:
  #     - "IS_LOCAL=True"
  #     - GRPC_ENABLE_FORK_SUPPORT=1
  #     - "BUCKET_PREFIX=local-grapl"
  #     - GRAPL_LOG_LEVEL=${GRAPL_LOG_LEVEL:-ERROR}
  #   links:
  #     - s3:minio
  #     - sqs:sqs.us-east-1.amazonaws.com
  #   tty: true
  #   extra_hosts:
  #     - sqs:127.0.0.1
  #     - amazonaws:127.0.0.1
  #     - minio:127.0.0.1

  grapl-analyzer-executor:
    image: grapl/grapl-analyzer-executor:${TAG:-latest}
    build:
      context: src
      dockerfile: ./python/Dockerfile.Makefile
      target: analyzer-executor-deploy
    command: /bin/sh -c '. venv/bin/activate && python3 analyzer_executor/src/run_local.py'
    environment:
      - "IS_LOCAL=True"
      - "HITCACHE_ADDR=dev-shared-redis"
      - "HITCACHE_PORT=6379"
      - "MESSAGECACHE_ADDR=dev-shared-redis"
      - "MESSAGECACHE_PORT=6379"
      - GRPC_ENABLE_FORK_SUPPORT=1
      - MG_ALPHAS=master_graph:9080
      - "IS_RETRY=False"
      - "BUCKET_PREFIX=local-grapl"
      - GRAPL_LOG_LEVEL=${GRAPL_LOG_LEVEL:-ERROR}
      - "SOURCE_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-analyzer-executor-queue"
    links:
      - s3:minio
      - sqs:sqs.us-east-1.amazonaws.com
      - grapl-master-graph-db:master_graph
    tty: true
    extra_hosts:
      - sqs:127.0.0.1
      - amazonaws:127.0.0.1
      - minio:127.0.0.1

  grapl-engagement-creator:
    image: grapl/grapl-engagement-creator:${TAG:-latest}
    build:
      context: src
      dockerfile: ./python/Dockerfile.Makefile
      target: engagement-creator-deploy
    command: /bin/sh -c '. venv/bin/activate && python3 engagement-creator/src/engagement-creator.py'
    environment:
      - "IS_LOCAL=True"
      - "BUCKET_PREFIX=local-grapl"
      - GRAPL_LOG_LEVEL=${GRAPL_LOG_LEVEL:-ERROR}
      - MG_ALPHAS=master_graph:9080
    tty: true
    links:
      - s3:minio
      - sqs:sqs.us-east-1.amazonaws.com
      - grapl-master-graph-db:master_graph
    extra_hosts:
      - sqs:127.0.0.1
      - amazonaws:127.0.0.1
      - minio:127.0.0.1

  grapl-engagement-edge:
    image: grapl/grapl-engagement-edge:${TAG:-latest}
    build:
      context: src
      dockerfile: ./python/Dockerfile.Makefile
      target: engagement-edge-deploy
    command: |
      /bin/sh -c '
        wait-for-it grapl-provision:8126 --timeout=120 &&
        . venv/bin/activate &&
        cd app &&
        chalice local --no-autoreload --host=0.0.0.0 --port=8900
      '
    ports:
      - "8900:8900"
    environment:
      - "IS_LOCAL=True"
      - GRAPL_LOG_LEVEL=${GRAPL_LOG_LEVEL:-ERROR}
      - "UX_BUCKET_URL=localhost:3000"
      - "USER_AUTH_TABLE=local-grapl-user_auth_table"
      - "BUCKET_PREFIX=local-grapl"
    depends_on:
      - grapl-provision
    tty: true
    links:
      - grapl-master-graph-db:master_graph
      - secretsmanager:secretsmanager.us-east-1.amazonaws.com
    networks:
      default:
        aliases:
          - grapl_auth

  grapl-ux-router:
    image: grapl/grapl-ux-router:${TAG:-latest}
    build:
      context: src
      dockerfile: ./python/Dockerfile.Makefile
      target: grapl-ux-router-deploy
    command: |
      /bin/sh -c '
        wait-for-it grapl-provision:8126 --timeout=10;
        . venv/bin/activate &&
        cd app &&
        chalice local --no-autoreload --host=0.0.0.0 --port=8901
      '
    ports:
      - "8901:8901"
    environment:
      - "IS_LOCAL=True"
      - GRAPL_LOG_LEVEL=${GRAPL_LOG_LEVEL:-ERROR}
      - "UX_BUCKET_NAME=local-grapl-engagement-ux-bucket"
    depends_on:
      - grapl-provision
    tty: true
    links:
      - s3:minio
    extra_hosts:
      - minio:127.0.0.1
    networks:
      default:
        aliases:
          - ux_router

  grapl-model-plugin-deployer:
    image: grapl/grapl-model-plugin-deployer:${TAG:-latest}
    build:
      context: src
      dockerfile: ./python/Dockerfile.Makefile
      target: model-plugin-deployer-deploy
    command: /bin/sh -c '. venv/bin/activate && cd app && chalice local --no-autoreload --host=0.0.0.0 --port=8123'
    ports:
      - "8123:8123"
    environment:
      - "IS_LOCAL=True"
      - "MG_ALPHAS=master_graph:9080"
      - GRAPL_LOG_LEVEL=${GRAPL_LOG_LEVEL:-ERROR}
      - "UX_BUCKET_URL=localhost"
    tty: true
    links:
      - s3:minio
      - sqs:sqs.us-east-1.amazonaws.com
      - secretsmanager:secretsmanager.us-east-1.amazonaws.com
      - grapl-master-graph-db:master_graph
    extra_hosts:
      - sqs:127.0.0.1
      - amazonaws:127.0.0.1
      - minio:127.0.0.1
    networks:
      default:
        aliases:
          - model_plugin_deployer

  grapl-dgraph-ttl:
    image: grapl/grapl-dgraph-ttl:${TAG:-latest}
    build:
      context: src
      dockerfile: ./python/Dockerfile.Makefile
      target: dgraph-ttl-deploy
    command: /bin/sh -c '. venv/bin/activate && cd app && chalice local --no-autoreload --host=0.0.0.0 --port=8124'
    ports:
      - "8124:8124"
    environment:
      - "IS_LOCAL=True"
      - MG_ALPHAS=master_graph:9080
      - GRAPL_LOG_LEVEL=${GRAPL_LOG_LEVEL:-ERROR}
      - GRAPL_DGRAPH_TTL_S=${GRAPL_DGRAPH_TTL_S:-31536000}
      - GRAPL_TTL_DELETE_BATCH_SIZE=${GRAPL_TTL_DELETE_BATCH_SIZE:-10}
    tty: true
    links:
      - grapl-master-graph-db:master_graph
    extra_hosts:
      - amazonaws:127.0.0.1

  #
  # JS/web services
  #

  grapl-engagement-view:
    image: syntaqx/serve
    volumes:
      - ./src/js/grapl-cdk/edge_ux_pre_replace:/var/www:ro
    command: "serve -dir /var/www"
    environment:
      - PORT=1234
    ports:
      - 1234:1234

  grapl-graphql-endpoint:
    image: grapl/grapl-graphql-endpoint:${TAG:-latest}
    build: 
      context: src/js/graphql_endpoint
      dockerfile: Dockerfile.Makefile
      target: graphql-endpoint-deploy
    command: yarn start server
    environment:
      - MG_ALPHAS=master_graph:9080
      - IS_LOCAL=True
      - PORT=5000
      - JWT_SECRET_ID=JWT_SECRET_ID
    links:
      - grapl-master-graph-db:master_graph
      - secretsmanager:secretsmanager.us-east-1.amazonaws.com
    ports:
      - 5000:5000
    networks:
      default:
        aliases:
          - graphql_endpoint

  grapl-notebook:
    image: grapl/grapl-notebook:${TAG:-latest}
    build: 
      context: src
      dockerfile: ./python/Dockerfile.Makefile
      target: grapl-notebook
    user: grapl
    environment:
      - MG_ALPHAS=master_graph:9080
    links:
      - grapl-master-graph-db:master_graph
    ports:
      - 8888:8888

  #
  # Utility services
  #

  grapl-provision:
    image: grapl/grapl-provision:${TAG:-latest}
    build: 
      context: src
      dockerfile: ./python/Dockerfile.Makefile
      target: grapl-provision
    command: |
      /bin/bash -c "
        # it doesn't seem to like waiting for sqs
        # wait-for-it sqs:9324 &&
        wait-for-it secretsmanager:4584 --timeout=90 &&
        wait-for-it s3:9000 --timeout=90 &&
        wait-for-it dynamodb:8000 --timeout=90 &&
        wait-for-it grapl-master-graph-db:8080 --timeout=90 &&
        wait-for-it grapl-engagement-view:1234 --timeout=90 &&
        . venv/bin/activate && 
        python grapl_local_provision/provision_local_identity_table.py &&
        python grapl_local_provision/grapl_provision.py &&
        # Host a server on this port, so that tests can wait-for-it
        python -m http.server 8126
      "
    environment:
      - GRAPL_LOG_LEVEL=${GRAPL_LOG_LEVEL:-ERROR}
      - MG_ALPHAS=master_graph:9080
    tty: true
    ports:
      - 8126:8126
    links:
      - grapl-master-graph-db:master_graph
      - s3:minio
      - sqs:sqs.us-east-1.amazonaws.com
      - secretsmanager:secretsmanager.us-east-1.amazonaws.com
      - dynamodb:dynamodb
    extra_hosts:
      - sqs:127.0.0.1
      - amazonaws:127.0.0.1
      - minio:127.0.0.1
    depends_on:
      - grapl-master-graph-db
      - s3
      - sqs
      - dynamodb

networks:
  default:
    name: grapl-network
